// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PBIEmbedded.Persistence.Contexts;

namespace PBIEmbedded.Persistence.Migrations
{
    [DbContext(typeof(PBIEmbeddedContext))]
    [Migration("20220120191522_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("PBIEmbedded.Domain.Dashboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report_ID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dashboards");
                });

            modelBuilder.Entity("PBIEmbedded.Domain.DashboardServicePrincipal", b =>
                {
                    b.Property<int>("DashboardId")
                        .HasColumnType("int");

                    b.Property<int>("ServicePrincipalId")
                        .HasColumnType("int");

                    b.HasKey("DashboardId", "ServicePrincipalId");

                    b.HasIndex("ServicePrincipalId");

                    b.ToTable("DashboardServicePrincipals");
                });

            modelBuilder.Entity("PBIEmbedded.Domain.ServicePrincipal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SP_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServicePrincipals");
                });

            modelBuilder.Entity("PBIEmbedded.Domain.ServicePrincipalUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ServicePrincipalId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ServicePrincipalId");

                    b.HasIndex("ServicePrincipalId");

                    b.ToTable("ServicePrincipalUsers");
                });

            modelBuilder.Entity("PBIEmbedded.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PBIEmbedded.Domain.DashboardServicePrincipal", b =>
                {
                    b.HasOne("PBIEmbedded.Domain.Dashboard", "Dashboard")
                        .WithMany("DashboardServicePrincipals")
                        .HasForeignKey("DashboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PBIEmbedded.Domain.ServicePrincipal", "ServicePrincipal")
                        .WithMany("DashboardServicePrincipals")
                        .HasForeignKey("ServicePrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dashboard");

                    b.Navigation("ServicePrincipal");
                });

            modelBuilder.Entity("PBIEmbedded.Domain.ServicePrincipalUser", b =>
                {
                    b.HasOne("PBIEmbedded.Domain.ServicePrincipal", "ServicePrincipal")
                        .WithMany("ServicePrincipalsUser")
                        .HasForeignKey("ServicePrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PBIEmbedded.Domain.User", "User")
                        .WithMany("ServicePrincipalsUser")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServicePrincipal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PBIEmbedded.Domain.Dashboard", b =>
                {
                    b.Navigation("DashboardServicePrincipals");
                });

            modelBuilder.Entity("PBIEmbedded.Domain.ServicePrincipal", b =>
                {
                    b.Navigation("DashboardServicePrincipals");

                    b.Navigation("ServicePrincipalsUser");
                });

            modelBuilder.Entity("PBIEmbedded.Domain.User", b =>
                {
                    b.Navigation("ServicePrincipalsUser");
                });
#pragma warning restore 612, 618
        }
    }
}
